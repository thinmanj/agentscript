{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "AgentScript",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.agentscript",
          "match": "//.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.agentscript",
          "match": "\\b(intent|behavior|use|resource|pipeline|description|expects|returns|validate|transform|on_error)\\b"
        },
        {
          "name": "keyword.operator.agentscript",
          "match": "\\b(and|or|not|in|matches|contains|between|is)\\b"
        },
        {
          "name": "constant.language.boolean.agentscript",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "entity.name.function.agentscript",
          "match": "\\b(filter|source|sink)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.agentscript",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.agentscript",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.agentscript",
          "match": "\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.agentscript",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.pipeline.agentscript",
          "match": "->"
        },
        {
          "name": "keyword.operator.lambda.agentscript",
          "match": "=>"
        },
        {
          "name": "keyword.operator.comparison.agentscript",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.arithmetic.agentscript",
          "match": "(\\+|\\-|\\*|\\/|%)"
        },
        {
          "name": "punctuation.separator.agentscript",
          "match": "[,:]"
        },
        {
          "name": "punctuation.section.braces.agentscript",
          "match": "[{}]"
        },
        {
          "name": "punctuation.section.brackets.agentscript",
          "match": "[\\[\\]]"
        },
        {
          "name": "punctuation.section.parens.agentscript",
          "match": "[()]"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.agentscript",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  },
  "scopeName": "source.agentscript"
}